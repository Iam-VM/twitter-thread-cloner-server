----------------------**---------------------------
by @girba

‚ÄúDevelopers spend most of their time figuring the system out."

Let‚Äôs dissect this a little. 

üßµ

1/
----------------------**---------------------------
by @girba

The oldest reference on the topic I know of dates back to 1979:

Zelkowitz, Shaw, and Gannon. Principles of software engineering and design. Prentice-Hall Englewood Cliffs, 1979.

2/ https://t.co/6b44pymDKw
----------------------**---------------------------
by @girba

It said that most of the development time was spent on maintenance (67% in the book).

Granted, the book does not specify how the figure was obtained. Still, it was deemed an important enough problem to attract significant research attention since then.

3/ https://t.co/lR3p2tn7BH
----------------------**---------------------------
by @girba

So, how far are we now, more than 4 decades later?

Let‚Äôs look at this recent paper:
Xia, Bao, Lo, Xing, Hassan, &amp; Li. Measuring Program Comprehension: A Large-Scale Field Study with Professionals. IEEE Transactions on Software Engineering, 44, 951-976.

4/ https://t.co/QFgotuYRoJ
----------------------**---------------------------
by @girba

This paper describes in great details how the figures are obtained.

And it says that Comprehension took on average ~58%.

Now, take a closer look at the third column in the table: it says Navigation (24%), and that is considered separately from the Comprehension effort!

5/ https://t.co/Qsj5AC4Bm2
----------------------**---------------------------
by @girba

So, after 4 decades, we can observe that not much has changed beside learning how to measure the ‚Äúfiguring out‚Äù time.

So what?

Well, that is the single largest expense we have. If we want to optimize anything in our discipline we should look at this part first.

6/
